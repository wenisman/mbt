name: Deploy Release

on:
  release:
    types: 
    - created 

jobs:
  buildAndDeploy:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: 
          - ubuntu-18.04
          - macos-latest
          - windows-latest
        include:
          - os: ubuntu-18.04
            artifact_name: mbt_linux_x86_64
          - os: macos-latest
            artifact_name: mbt_darwin_x86_64
          - os: windows-latest
            artifact_name: mbt_windows_x86.zip

    steps:
    - uses: actions/checkout@master
      with:
        path: ./src

    - uses: actions/setup-go@v1
      with:
        go-version: '1.12.x'

    - name: Install pkg-config
      run: |
        if [ "$RUNNER_OS" == "macOS" ]; then
          brew install pkg-config
        fi

    - name: Build MBT
      env:
        GOPATH: ${{ github.workspace }}/..
        GOBIN: ${{ github.workspace }}/../bin
      run: |
        if [ "$RUNNER_OS" == "Windows" ]; then
            .\scripts\build_win.bat
        else
            # Get the release version
            export VERSION=$(jq --raw-output '.release.id' "$GITHUB_EVENT_PATH") 
            make build;
        fi

    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        RELEASE_ID: $(jq --raw-output '.release.id' "$GITHUB_EVENT_PATH")
      with:
        upload_url: https://uploads.github.com/repos/${GITHUB_REPOSITORY}/releases/${RELEASE_ID}/assets?name=${{ matrix.artifact_name }}
        asset_path: ./${{ matrix.artifact_name }}
        asset_name: ${{ matrix.artifact_name }}
        asset_content_type: application/zip

    # - name: Push Binaries
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #   run: |
    #     if [ "$RUNNER_OS" == "Windows" ]; then
    #         choco install jq

    #     else   
    #       chmod +x ./scripts/*
    #       ./scripts/upload_git.sh build/${{ matrix.artifact_name }}
    #     fi